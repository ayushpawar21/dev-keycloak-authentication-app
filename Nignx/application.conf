server {
    listen 80;
    server_name 192.168.56.101;  # The server's IP address

    # Health check for the web application
    location / {
        proxy_pass http://192.168.56.101:3000;  # Forward to the web application running on port 3000
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Optional: buffer settings to handle large requests/responses
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;

        # Set a fallback for when the app is down
        error_page 502 = /custom_502.html;  # If app is down, serve a custom error page
    }

    location = /custom_502.html {
        internal;
        root /usr/share/nginx/html;  # Define the root directory for the error page
        default_type text/html;
        add_header Content-Length 0;
        return 503;  # Return a 503 Service Unavailable response
    }

    location /auth/ {
        proxy_pass http://192.168.56.101:8080/auth/;  # Forward to Keycloak on port 8080
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Optional: buffer settings to handle large requests/responses
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;

        # Set a fallback for when Keycloak is down
        error_page 502 = /auth_custom_502.html;  # If Keycloak is down, serve a custom error page
    }

    location = /auth_custom_502.html {
        internal;
        root /usr/share/nginx/html;  # Define the root directory for the error page
        default_type text/html;
        add_header Content-Length 0;
        return 503;  # Return a 503 Service Unavailable response
    }
}

